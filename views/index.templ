package views

import "github.com/Artur-Galstyan/workcraft-stronghold/views/layout"

templ Index() {
	@layout.Base() {
		<script>
        async function loadWorkers() {
            try {
                const response = await fetch('/api/peons');
                const data = await response.json();

                $('#workers').empty();
                console.log(data)
                data.items.forEach(function(item) {
                    if (item.status !== "OFFLINE") {
                        const taskCell = item.current_task
                            ? `<td class="px-4 py-2 link">
                                 <a href="/task/${item.current_task}">
                                   ${item.current_task}
                                 </a>
                               </td>`
                            : `<td class="px-4 py-2 text-gray-500">
                                 No active task
                               </td>`;

                        $('#workers').append(`
                            <tr>
                            <td class="px-4 py-2">
                              <a class="link" href="/peon/${item.id}">
                                ${item.id}
                              </a>
                            </td>
                            <td class="px-4 py-2">${item.status}</td>
                            <td class="px-4 py-2">${item.last_heartbeat}</td>
                            <td class="px-4 py-2">${item.queues}</td>
                            ${taskCell}
                            </tr>
                        `);
                    }
                });
            } catch (error) {
                console.error('Error fetching workers:', error);
            }
        }

        async function loadLast10Tasks() {
          const count = 10;
          try {
            let filter = {
              "page": 1,
              "per_page": count,
            }
            const response = await fetch(`/api/tasks?query=${JSON.stringify(filter)}`);
            if (!response.ok) {
              console.error('Failed to fetch last 10 tasks');
              console.error(await response.text());
              return;
            }
            const data = await response.json();
            console.log(data);
            $('#tasks').empty();

            data.items.forEach(function(item) {
              $('#tasks').append(`
                <tr>
                  <td class="px-4 py-2 truncate">
                    <a class="link" href="/task/${item.id}">
                      ${item.id}
                    </a>
                  </td>
                  <td class="px-4 py-2">${item.task_name}</td>
                  <td class="px-4 py-2">
                    <span class="px-2 py-1 rounded-full text-sm inline-block ${window.getStatusColor(item.status)}">
                      ${item.status}
                    </span>
                  </td>
                  <td class="px-4 py-2">${item.queue}</td>
                  <td class="px-4 py-2 truncate">
                    <a class="link" href=${item.peon_id ? `/peon/${item.peon_id}` : ''}>
                      ${item.peon_id || 'No peon assigned'}
                    </a>
                  </td>
                  <td class="px-4 py-2">${item.created_at.replace('T', ' ').replace('Z', '')}</td>
                </tr>
              `);
            });

          } catch (error) {
            console.error('Error fetching last 10 tasks:', error);
          }
        }

        // Call the function when the document is ready
        $(document).ready(function() {
            loadWorkers();
            loadLast10Tasks();

            // Refresh every 5 seconds

            setInterval(() => {
              loadWorkers()
              loadLast10Tasks()
            }, 5000)
        });
        </script>
		<div class="p-4">
			<h2 class="text-xl font-bold mt-4">Active peons</h2>
			<div class="overflow-x-auto">
				<table class="table">
					<thead>
						<tr>
							<th class="px-4 py-2">ID</th>
							<th class="px-4 py-2">Status</th>
							<th class="px-4 py-2">Last Heartbeat</th>
							<th class="px-4 py-2">Queues</th>
							<th class="px-4 py-2">Current Task</th>
						</tr>
					</thead>
					<tbody id="workers"></tbody>
				</table>
			</div>
			<div class="my-4 flex justify-start">
				<button class="btn"><a href="/peons">Show all peons</a></button>
			</div>
			<div class="divider my-20"></div>
			<h2 class="text-xl font-bold mt-4">Last 10 Tasks</h2>
			<div class="overflow-x-auto">
				<table class="table">
					<thead>
						<tr>
							<th class="px-4 py-2">ID</th>
							<th class="px-4 py-2">Name</th>
							<th class="px-4 py-2">Status</th>
							<th class="px-4 py-2">Queue</th>
							<th class="px-4 py-2">Peon</th>
							<th class="px-4 py-2">Created At</th>
						</tr>
					</thead>
					<tbody id="tasks"></tbody>
				</table>
			</div>
			<div class="my-4 flex justify-start">
				<button class="btn"><a href="tasks">Show all tasks</a></button>
			</div>
		</div>
	}
}
